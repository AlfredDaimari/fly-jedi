// trip schema

const mongoose = require("mongoose");

const tripSchema = new mongoose.Schema({
  //_id will be the default id generated by mongoDB
  date: {
    required: true,
    type: String, // will be in the format 'yyyy-mm-dd'
  },
  flightDetails: {
    _id: mongoose.SchemaTypes.ObjectId, // id of the flight
    boarding: Date,
    dayOfFlight: String,
    destinationAirport: String,
    flightNumber: String,
    flightType: String,
    gateClose: Date,
    landingTime: Date,
    startingAirport: String,
    takeOff: Date,
  },
  seatBookings: [
    {
      _id: String,    // will be the pnr
      email: String,
      firstName: String,
      lastName: String,
      seat: String,
    },
  ],
});

// schema method to check if the email entered is indeed unique
tripSchema.methods.checkEmailUniqueness = function (email) {
  const trip = this.toObject();
  const index = trip.seatBookings.findIndex(
    (booking) => booking.email == email
  );
  if (index !== -1) {
    throw new Error("email entered not unique");
  }
};

const Trips = mongoose.model("trips", tripSchema, "trips");

module.exports = Trips;
